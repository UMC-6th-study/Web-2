{"ast":null,"code":"var _jsxFileName = \"/Users/eo-seonyoung/Documents/GitHub/Web-2/Week3/movieposter/movieposter3/src/components/NowPlayingPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/NowPlayingPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '41b11920d4e93b17f6df78d77da5135f'; // 여기에 실제 TMDb API 키를 입력하세요\n\nconst MovieList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  padding: 20px;\n`;\n_c = MovieList;\nconst MovieCard = styled.div`\n  background-color: #333;\n  color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  width: 200px;\n  text-align: center;\n`;\n_c2 = MovieCard;\nconst NowPlayingPage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchNowPlayingMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching now playing movies', error);\n      }\n    };\n    fetchNowPlayingMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MovieList, {\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.release_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NowPlayingPage, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c3 = NowPlayingPage;\nexport default NowPlayingPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MovieList\");\n$RefreshReg$(_c2, \"MovieCard\");\n$RefreshReg$(_c3, \"NowPlayingPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","styled","jsxDEV","_jsxDEV","API_KEY","MovieList","div","_c","MovieCard","_c2","NowPlayingPage","_s","movies","setMovies","fetchNowPlayingMovies","response","get","data","results","error","console","children","map","movie","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","id","_c3","$RefreshReg$"],"sources":["/Users/eo-seonyoung/Documents/GitHub/Web-2/Week3/movieposter/movieposter3/src/components/NowPlayingPage.jsx"],"sourcesContent":["// src/components/NowPlayingPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst API_KEY = '41b11920d4e93b17f6df78d77da5135f'; // 여기에 실제 TMDb API 키를 입력하세요\n\nconst MovieList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  padding: 20px;\n`;\n\nconst MovieCard = styled.div`\n  background-color: #333;\n  color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  width: 200px;\n  text-align: center;\n`;\n\nconst NowPlayingPage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchNowPlayingMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching now playing movies', error);\n      }\n    };\n\n    fetchNowPlayingMovies();\n  }, []);\n\n  return (\n    <MovieList>\n      {movies.map(movie => (\n        <MovieCard key={movie.id}>\n          <h3>{movie.title}</h3>\n          <p>{movie.release_date}</p>\n        </MovieCard>\n      ))}\n    </MovieList>\n  );\n};\n\nexport default NowPlayingPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;AAEpD,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,SAAS;AAQf,MAAMG,SAAS,GAAGP,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,SAAS;AASf,MAAME,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMgB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,0DAAyDZ,OAAQ,wBAAuB,CAAC;QAC3HS,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDL,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACE,SAAS;IAAAgB,QAAA,EACPT,MAAM,CAACU,GAAG,CAACC,KAAK,iBACfpB,OAAA,CAACK,SAAS;MAAAa,QAAA,gBACRlB,OAAA;QAAAkB,QAAA,EAAKE,KAAK,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBzB,OAAA;QAAAkB,QAAA,EAAIE,KAAK,CAACM;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFbL,KAAK,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA1BID,cAAc;AAAAqB,GAAA,GAAdrB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}